"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./app/hooks/useTask.ts":
/*!******************************!*\
  !*** ./app/hooks/useTask.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTaskManager: function() { return /* binding */ useTaskManager; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _services_apis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/apis */ \"(app-pages-browser)/./app/services/apis.ts\");\n\n\nfunction useTaskManager(param) {\n    let { pageName, baseUrl } = param;\n    const [tasks, setTasks] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [isSubmitting, setIsSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const apiService = new _services_apis__WEBPACK_IMPORTED_MODULE_1__.TaskApiService(baseUrl, pageName);\n    const fetchTasks = async ()=>{\n        try {\n            setError(null);\n            const data = await apiService.fetchTasks();\n            setTasks(data);\n        } catch (error) {\n            setError(\"Failed to fetch tasks\");\n            console.error(\"Error fetching tasks:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const createTask = async (taskData)=>{\n        try {\n            setIsSubmitting(true);\n            setError(null);\n            await apiService.createTask(taskData);\n            await fetchTasks();\n        } catch (error) {\n            setError(\"Failed to create task\");\n            throw error;\n        } finally{\n            setIsSubmitting(false);\n        }\n    };\n    const startTask = async (taskId)=>{\n        try {\n            setIsProcessing(true);\n            setError(null);\n            await apiService.startTask(taskId);\n            await fetchTasks();\n        } catch (error) {\n            setError(\"Failed to start task\");\n            console.error(\"Error starting task:\", error);\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    const completeTask = async (taskId)=>{\n        try {\n            setIsProcessing(true);\n            setError(null);\n            await apiService.completeTask(taskId);\n            await fetchTasks();\n        } catch (error) {\n            setError(\"Failed to complete task\");\n            console.error(\"Error completing task:\", error);\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    const deleteTask = async (taskId)=>{\n        try {\n            setIsProcessing(true);\n            setError(null);\n            await apiService.deleteTask(taskId);\n            await fetchTasks();\n        } catch (error) {\n            setError(\"Failed to delete task\");\n            console.error(\"Error deleting task:\", error);\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    // Subtask management functions\n    const addSubtask = async (taskId, subtask)=>{\n        try {\n            setIsProcessing(true);\n            setError(null);\n            const newSubtask = await apiService.createSubtask(taskId, subtask);\n            // Update the task's subtasks list\n            setTasks(tasks.map((task)=>task.id === taskId ? {\n                    ...task,\n                    subtasks: [\n                        ...task.subtasks,\n                        newSubtask\n                    ]\n                } : task));\n        } catch (error) {\n            setError(\"Failed to add subtask\");\n            console.error(\"Error adding subtask:\", error);\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    const updateSubtaskStatus = async (subtaskId, status)=>{\n        try {\n            setIsProcessing(true);\n            setError(null);\n            const updatedSubtask = await apiService.updateSubtaskStatus(subtaskId, status);\n            // Update the subtask in the appropriate task\n            setTasks(tasks.map((task)=>({\n                    ...task,\n                    subtasks: task.subtasks.map((subtask)=>subtask.id === subtaskId ? updatedSubtask : subtask)\n                })));\n        } catch (error) {\n            setError(\"Failed to update subtask status\");\n            console.error(\"Error updating subtask status:\", error);\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    const deleteSubtask = async (subtaskId)=>{\n        try {\n            setIsProcessing(true);\n            setError(null);\n            await apiService.deleteSubtask(subtaskId);\n            // Remove the subtask from the appropriate task\n            setTasks(tasks.map((task)=>({\n                    ...task,\n                    subtasks: task.subtasks.filter((subtask)=>subtask.id !== subtaskId)\n                })));\n        } catch (error) {\n            setError(\"Failed to delete subtask\");\n            console.error(\"Error deleting subtask:\", error);\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    const refreshTasks = ()=>{\n        setLoading(true);\n        fetchTasks();\n    };\n    const fetchAllTasksForAnalytics = async ()=>{\n        try {\n            setError(null);\n            setLoading(true);\n            const apiService = new _services_apis__WEBPACK_IMPORTED_MODULE_1__.TaskApiService(baseUrl, pageName);\n            const data = await apiService.fetchAllTasks();\n            setTasks(data);\n        } catch (error) {\n            setError(\"Failed to fetch all tasks for analytics\");\n            console.error(\"Error fetching all tasks:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        fetchTasks();\n    }, [\n        pageName\n    ]);\n    return {\n        tasks,\n        loading,\n        isSubmitting,\n        isProcessing,\n        error,\n        createTask,\n        startTask,\n        completeTask,\n        deleteTask,\n        addSubtask,\n        updateSubtaskStatus,\n        deleteSubtask,\n        refreshTasks,\n        fetchAllTasksForAnalytics\n    };\n}\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/useTask.ts\n"));

/***/ })

});